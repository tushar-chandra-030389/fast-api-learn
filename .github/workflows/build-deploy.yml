name: Build and deploy rest server





on:
  push:
    branches:
      - "main"
      # mention other branches if any

  pull_request:
    branches:
      - "main"

# on: [ "push", "pull_request" ]

jobs:
  job1:
    runs-on: ubuntu-20.04

    environment: TEST
    
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}} 
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_NAME_TEST: ${{secrets.DATABASE_NAME_TEST}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}} 
      TOKEN_EXPIRE_MINUTES: ${{secrets.TOKEN_EXPIRE_MINUTES}}
      ENV: ${{secrets.ENV}}
    
    services:
      # label for service
      rest_server_test_db:
        image: postgres
        env:
          POSTGRES_USER:  ${{env.DATABASE_USERNAME}}
          POSTGRES_DB: ${{env.DATABASE_NAME_TEST}}
          POSTGRES_PASSWORD: ${{env.DATABASE_PASSWORD}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps: 
      - name: Step 1 - pulling git repo
        uses: actions/checkout@v4
      - name: Step 2 - setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' 
      - name: Step 3 - update pip
        run: python3 -m pip install --upgrade pip
      - name: Step 4 - install dependencies
        run: pip install -r requirements.txt
      # - name: Step 4.5 - Wait
      #   uses: 1itachi/sleep-random@v1.0.0
      #   with:
      #     minutes: '1'
      - name: Step 5 - run unit tests
        run: |
          pip install pytest
          pytest -v -s --disable-warnings 

